{"version":3,"file":"out.js","mappings":"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","sources":["webpack:///../node_modules/ecsy/src/RemoteDevTools/index.js","webpack:///../node_modules/ecsy/src/RemoteDevTools/utils.js","webpack:///../node_modules/ecsy/src/Utils.js","webpack:///../node_modules/ecsy/src/SystemManager.js","webpack:///../node_modules/ecsy/src/ObjectPool.js","webpack:///../node_modules/ecsy/src/EventDispatcher.js","webpack:///../node_modules/ecsy/src/Query.js","webpack:///../node_modules/ecsy/src/QueryManager.js","webpack:///../node_modules/ecsy/src/Component.js","webpack:///../node_modules/ecsy/src/SystemStateComponent.js","webpack:///../node_modules/ecsy/src/EntityManager.js","webpack:///../node_modules/ecsy/src/ComponentManager.js","webpack:///../node_modules/ecsy/src/Version.js","webpack:///../node_modules/ecsy/src/WrapImmutableComponent.js","webpack:///../node_modules/ecsy/src/Entity.js","webpack:///../node_modules/ecsy/src/World.js","webpack:///../node_modules/ecsy/src/System.js","webpack:///../node_modules/ecsy/src/TagComponent.js","webpack:///../node_modules/ecsy/src/Types.js","webpack:///./DataComponents/Demo1/LineData.ts","webpack:///./DataComponents/Demo1/ValueData.ts","webpack:///./DataComponents/Demo2/MassData.ts","webpack:///./DataComponents/Demo2/Transform2DData.ts","webpack:///./DataComponents/Demo2/VelocityData.ts","webpack:///./Demo1.ts","webpack:///./Demo2.ts","webpack:///./Main.ts","webpack:///./Systems/ClearCanvasSystem.ts","webpack:///./Systems/DebugRenderSystem.ts","webpack:///./Systems/DraggableHighlightRenderSystem.ts","webpack:///./Systems/DraggableSystem.ts","webpack:///./Systems/GravitySystem.ts","webpack:///./Systems/MoonRenderSystem.ts","webpack:///./Systems/PlanetRenderSystem.ts","webpack:///./Systems/VelocityMoveSystem.ts","webpack:///./TagComponents/Demo2/DebugTag.ts","webpack:///./TagComponents/Demo2/DraggableHighlightTag.ts","webpack:///./TagComponents/Demo2/DraggableTag.ts","webpack:///./TagComponents/Demo2/MoonTag.ts","webpack:///./TagComponents/Demo2/PlanetTag.ts","webpack:///./Utils/Vector2.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"sourcesContent":["/* global Peer */\nimport { injectScript, generateId } from \"./utils.js\";\nimport { hasWindow } from \"../Utils.js\";\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach((key) => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args),\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", (error) => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack,\n      }),\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nexport function enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = (e) => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    // var peer = new Peer(remoteId);\n    var peer = new Peer(remoteId, {\n      host: \"peerjs.ecsy.io\",\n      secure: true,\n      port: 443,\n      config: {\n        iceServers: [\n          { url: \"stun:stun.l.google.com:19302\" },\n          { url: \"stun:stun1.l.google.com:19302\" },\n          { url: \"stun:stun2.l.google.com:19302\" },\n          { url: \"stun:stun3.l.google.com:19302\" },\n          { url: \"stun:stun4.l.google.com:19302\" },\n        ],\n      },\n      debug: 3,\n    });\n\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", (connection) => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function () {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function (data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach((world) => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version },\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value,\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n","export function generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n","/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nexport function getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nexport function componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nexport function queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nexport const hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nexport const now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nexport function componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n","import { now } from \"./Utils.js\";\n\nexport class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n","export class ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n","/**\n * @private\n * @class EventDispatcher\n */\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n","import EventDispatcher from \"./EventDispatcher.js\";\nimport { queryKey } from \"./Utils.js\";\n\nexport default class Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n","import Query from \"./Query.js\";\nimport { queryKey } from \"./Utils.js\";\n\n/**\n * @private\n * @class QueryManager\n */\nexport default class QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n","export class Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this._pool = null;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    if (process.env.NODE_ENV !== \"production\") {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n","import { Component } from \"./Component.js\";\n\nexport class SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n","import { ObjectPool } from \"./ObjectPool.js\";\nimport QueryManager from \"./QueryManager.js\";\nimport EventDispatcher from \"./EventDispatcher.js\";\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nexport class EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n    this.entityRemoveAllComponents(entity, immediately);\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    entity._pool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n","import { ObjectPool } from \"./ObjectPool.js\";\n\nexport class ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n","export const Version = \"0.3.1\";\n","const proxyMap = new WeakMap();\n\nconst proxyHandler = {\n  set(target, prop) {\n    throw new Error(\n      `Tried to write to \"${target.constructor.getName()}#${String(\n        prop\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\n    );\n  },\n};\n\nexport default function wrapImmutableComponent(T, component) {\n  if (component === undefined) {\n    return undefined;\n  }\n\n  let wrappedComponent = proxyMap.get(component);\n\n  if (!wrappedComponent) {\n    wrappedComponent = new Proxy(component, proxyHandler);\n    proxyMap.set(component, wrappedComponent);\n  }\n\n  return wrappedComponent;\n}\n","import Query from \"./Query.js\";\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\n\nexport class Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    this.id = entityManager._nextEntityId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n","import { SystemManager } from \"./SystemManager.js\";\nimport { EntityManager } from \"./EntityManager.js\";\nimport { ComponentManager } from \"./ComponentManager.js\";\nimport { Version } from \"./Version.js\";\nimport { hasWindow, now } from \"./Utils.js\";\nimport { Entity } from \"./Entity.js\";\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nexport class World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n","import Query from \"./Query.js\";\nimport { componentRegistered } from \"./Utils.js\";\n\nexport class System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else {\n                  /*\n                  // Checking just specific components\n                  let changedList = (this.queries[queryName][eventName] = {});\n                  event.forEach(component => {\n                    let eventList = (changedList[\n                      componentPropertyName(component)\n                    ] = []);\n                    query.eventDispatcher.addEventListener(\n                      Query.prototype.COMPONENT_CHANGED,\n                      (entity, changedComponent) => {\n                        if (\n                          changedComponent.constructor === component &&\n                          eventList.indexOf(entity) === -1\n                        ) {\n                          eventList.push(entity);\n                        }\n                      }\n                    );\n                  });\n                  */\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport function Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n","import { Component } from \"./Component.js\";\n\nexport class TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n","export const copyValue = (src) => src;\n\nexport const cloneValue = (src) => src;\n\nexport const copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nexport const cloneArray = (src) => src && src.slice();\n\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nexport const cloneClonable = (src) => src && src.clone();\n\nexport function createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nexport const Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n","import { Component } from \"ecsy\";\nimport { Vector2 } from \"../../Utils/Vector2\";\n\nexport class LineData extends Component<LineData> {\n  points: Array<Vector2>;\n\n  constructor() {\n    // Disable the default schema behavior.\n    super(false);\n\n    // Custom data setup.\n    this.points = new Array<Vector2>();\n  }\n\n  copy(source: this): this {\n    this.points.length = source.points.length;\n\n    for (let i = 0; i < source.points.length; i++) {\n      const sourcePoint = source.points[i];\n      this.points[i] = sourcePoint.clone();\n    }\n\n    return this;\n  }\n\n  // No need to override default clone() behavior.\n  // If parameters are needed for the constructor, write a custom clone() method.\n  // clone(): this {\n  //   return new (this.constructor()).copy(this);\n  // }\n\n  reset(): void {\n    this.points.forEach((point) => {\n      point.x = 0;\n      point.y = 0;\n    });\n  }\n}\n","import { Component, ComponentSchema, Types } from \"ecsy\";\n\nexport class ValueData extends Component<ValueData> {\n  intVal: number;\n  strVal: string;\n\n  static schema: ComponentSchema = {\n    intVal: {\n      type: Types.Number,\n      default: 0,\n    },\n    strVal: {\n      type: Types.String,\n      default: \"\",\n    },\n  };\n}\n","import { Component, Types } from \"ecsy\";\n\nexport class MassData extends Component<MassData> {\n  mass: number;\n\n  static schema = {\n    mass: {\n      type: Types.Number,\n      default: 1,\n    },\n  };\n}\n","import { Component, Types } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../../Utils/Vector2\";\n\nexport class Transform2DData extends Component<Transform2DData> {\n  position: Vector2;\n\n  static schema = {\n    position: {\n      type: Vector2Type,\n      default: new Vector2(0, 0),\n    },\n  };\n}\n","import { Component } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../../Utils/Vector2\";\n\nexport class VelocityData extends Component<VelocityData> {\n  velocity: Vector2;\n\n  static schema = {\n    velocity: {\n      type: Vector2Type,\n      default: new Vector2(0, 0),\n    },\n  };\n}\n","import { World } from \"ecsy\";\nimport { LineData } from \"./DataComponents/Demo1/LineData\";\nimport { ValueData } from \"./DataComponents/Demo1/ValueData\";\nimport { Transform2DData } from \"./DataComponents/Demo2/Transform2DData\";\n\nimport { Vector2 } from \"./Utils/Vector2\";\n\n// 1. Create a world\nconst mainWorld: World = new World({\n  entityPoolSize: 10000,\n});\n\n// 2.1 Basic Components\n// 2.1.1 Create a component\n// 2.1.2 Change the value of the component\nconst BasicComponentDemo = () => {\n  let debugTextArea = document.getElementById(\"debug1\") as HTMLTextAreaElement;\n  let debugButton = document.getElementById(\n    \"debugButton1\"\n  ) as HTMLButtonElement;\n\n  // Return if the debug elements are not found.\n  if (!debugTextArea || !debugButton) {\n    return;\n  }\n\n  // Create a new component.\n  const valueData: ValueData = new ValueData();\n  debugTextArea.innerHTML +=\n    \"Initial ValueData: \" + JSON.stringify(valueData) + \"\\n\";\n\n  const ChangeValueData = () => {\n    // Change the value of the component.\n    valueData.intVal += 10;\n    valueData.strVal = \"Hello World!\";\n    debugTextArea.innerHTML +=\n      \"Current ValueData: \" + JSON.stringify(valueData) + \"\\n\";\n  };\n\n  debugButton.addEventListener(\"click\", ChangeValueData);\n};\n\n// 2.2 Custom Types\n// 2.2.1 Create a component with a custom type\n// 2.2.2 Change the value of the component\nconst CustomTypeDemo = () => {\n  let debugTextArea = document.getElementById(\"debug2\") as HTMLTextAreaElement;\n  let debugButton = document.getElementById(\n    \"debugButton2\"\n  ) as HTMLButtonElement;\n\n  // Return if the debug elements are not found.\n  if (!debugTextArea || !debugButton) {\n    return;\n  }\n\n  // Create a new transform component.\n  const transform2D: Transform2DData = new Transform2DData();\n  debugTextArea.innerHTML +=\n    \"Initial Transform2D: \" + JSON.stringify(transform2D) + \"\\n\";\n\n  const ChangeTransform2D = () => {\n    // Change the value of the component.\n    transform2D.position.x += 10;\n    transform2D.position.y += 10;\n    debugTextArea.innerHTML +=\n      \"Current Transform2D: \" + JSON.stringify(transform2D) + \"\\n\";\n  };\n\n  debugButton.addEventListener(\"click\", ChangeTransform2D);\n};\n\nconst CustomComponentDemo = () => {\n  let debugTextArea = document.getElementById(\"debug3\") as HTMLTextAreaElement;\n  let randomOriginalButton = document.getElementById(\n    \"debugButton3\"\n  ) as HTMLButtonElement;\n  let copyComponent = document.getElementById(\n    \"debugButton4\"\n  ) as HTMLButtonElement;\n\n  // Return if the debug elements are not found.\n  if (!debugTextArea || !randomOriginalButton || !copyComponent) {\n    return;\n  }\n\n  // Create 2 new LineData component.\n  const lineData: LineData = new LineData();\n  const lineData2: LineData = new LineData();\n  debugTextArea.innerHTML =\n    \"Initial LineData: \" +\n    JSON.stringify(lineData) +\n    \"\\n\" +\n    \"Initial LineData2: \" +\n    JSON.stringify(lineData2) +\n    \"\\n\";\n\n  const RandomOriginal = () => {\n    // Clear the points array.\n    lineData.points.length = 0;\n\n    // Add random points to the original line.\n    for (let i = 0; i < 3; i++) {\n      lineData.points.push(new Vector2(Math.random(), Math.random()));\n    }\n\n    debugTextArea.innerHTML =\n      \"Current LineData: \" +\n      JSON.stringify(lineData) +\n      \"\\n\" +\n      \"Current LineData2: \" +\n      JSON.stringify(lineData2) +\n      \"\\n\";\n  };\n\n  const CopyComponent = () => {\n    // Copy the original line to the second line.\n    lineData2.copy(lineData);\n\n    debugTextArea.innerHTML =\n      \"Current LineData: \" +\n      JSON.stringify(lineData) +\n      \"\\n\" +\n      \"Current LineData2: \" +\n      JSON.stringify(lineData2) +\n      \"\\n\";\n  };\n\n  randomOriginalButton.addEventListener(\"click\", RandomOriginal);\n  copyComponent.addEventListener(\"click\", CopyComponent);\n};\n\nexport const demo1 = () => {\n  // 2. Components\n  BasicComponentDemo();\n  CustomTypeDemo();\n  CustomComponentDemo();\n};\n","import { World } from \"ecsy\";\nimport { MassData } from \"./DataComponents/Demo2/MassData\";\nimport { Transform2DData } from \"./DataComponents/Demo2/Transform2DData\";\nimport { VelocityData } from \"./DataComponents/Demo2/VelocityData\";\nimport { ClearCanvasSystem } from \"./Systems/ClearCanvasSystem\";\nimport { DebugRenderSystem } from \"./Systems/DebugRenderSystem\";\nimport { DraggableHighlightRenderSystem } from \"./Systems/DraggableHighlightRenderSystem\";\nimport { DraggableSystem } from \"./Systems/DraggableSystem\";\nimport { GravitySystem } from \"./Systems/GravitySystem\";\nimport { MoonRenderSystem } from \"./Systems/MoonRenderSystem\";\nimport { PlanetRenderSystem } from \"./Systems/PlanetRenderSystem\";\nimport { VelocityMoveSystem } from \"./Systems/VelocityMoveSystem\";\nimport { DebugTag } from \"./TagComponents/Demo2/DebugTag\";\nimport { DraggableHighlightTag } from \"./TagComponents/Demo2/DraggableHighlightTag\";\nimport { DraggableTag } from \"./TagComponents/Demo2/DraggableTag\";\nimport { MoonTag } from \"./TagComponents/Demo2/MoonTag\";\nimport { PlanetTag } from \"./TagComponents/Demo2/PlanetTag\";\nimport { Vector2 } from \"./Utils/Vector2\";\n\nconst world = new World({\n  entityPoolSize: 10000,\n});\n\nconst mainUpdate = () => {\n  world.execute();\n  requestAnimationFrame(mainUpdate);\n};\n\nexport const demo2 = () => {\n  // Get main canvas.\n  let mainCanvas = document.getElementById(\"mainCanvas\") as HTMLCanvasElement;\n\n  // Return if canvas is not found.\n  if (!mainCanvas) {\n    return;\n  }\n\n  // Register all tag components.\n  world\n    .registerComponent(DebugTag)\n    .registerComponent(DraggableTag)\n    .registerComponent(DraggableHighlightTag)\n    .registerComponent(PlanetTag)\n    .registerComponent(MoonTag);\n  // Register all data components.\n  world\n    .registerComponent(Transform2DData)\n    .registerComponent(VelocityData)\n    .registerComponent(MassData);\n\n  // Register all game play systems.\n  world\n    .registerSystem(DraggableSystem, {\n      canvas: mainCanvas,\n    })\n    .registerSystem(VelocityMoveSystem)\n    .registerSystem(GravitySystem);\n\n  // Register all render systems.\n  world\n    .registerSystem(ClearCanvasSystem, {\n      canvas: mainCanvas,\n    })\n    .registerSystem(MoonRenderSystem, {\n      canvas: mainCanvas,\n    })\n    .registerSystem(PlanetRenderSystem, {\n      canvas: mainCanvas,\n    })\n    .registerSystem(DebugRenderSystem, {\n      canvas: mainCanvas,\n    })\n    .registerSystem(DraggableHighlightRenderSystem, {\n      canvas: mainCanvas,\n    });\n\n  // Randomly add 200 draggable entities.\n  for (let i = 0; i < 50; i++) {\n    world\n      .createEntity()\n      .addComponent(Transform2DData, {\n        position: new Vector2(\n          Math.random() * mainCanvas.width,\n          Math.random() * mainCanvas.height\n        ),\n      })\n      .addComponent(VelocityData, {\n        velocity: new Vector2(\n          Math.random() * 100 - 50,\n          Math.random() * 100 - 50\n        ),\n      })\n      .addComponent(MassData, {\n        mass: Math.random() * 5 + 5,\n      })\n      .addComponent(MoonTag);\n  }\n\n  // Randomly generate 3 planets.\n  for (let i = 0; i < 1; i++) {\n    world\n      .createEntity()\n      .addComponent(Transform2DData, {\n        position: new Vector2(250, 250),\n      })\n      .addComponent(MassData, {\n        mass: Math.random() * 5000 + 5000,\n      })\n      .addComponent(PlanetTag)\n      .addComponent(DraggableTag);\n  }\n\n  // Start main loop.\n  requestAnimationFrame(mainUpdate);\n};\n","import { demo1 } from \"./Demo1\";\nimport { demo2 } from \"./Demo2\";\n\nconst main = () => {\n  demo1();\n  demo2();\n};\n\nwindow.onload = main;\n","import { Attributes, System } from \"ecsy\";\n\nexport class ClearCanvasSystem extends System {\n  canvas: HTMLCanvasElement;\n  canvasContext: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes): void {\n    // Get the canvas element.\n    this.canvas = attributes.canvas as HTMLCanvasElement;\n    this.canvasContext = this.canvas.getContext(\n      \"2d\"\n    ) as CanvasRenderingContext2D;\n  }\n\n  execute(delta: number, time: number): void {\n    // Clear the canvas.\n    this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n","import { Attributes, System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { DebugTag } from \"../TagComponents/Demo2/DebugTag\";\n\nconst arrowLength = 50;\nconst arrowWidth = 2;\n\nexport class DebugRenderSystem extends System {\n  static queries: SystemQueries = {\n    transformEntities: {\n      components: [Transform2DData, DebugTag],\n    },\n  };\n\n  canvas: HTMLCanvasElement;\n  canvasContext: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes): void {\n    // Get the canvas element.\n    this.canvas = attributes.canvas as HTMLCanvasElement;\n    this.canvasContext = this.canvas.getContext(\n      \"2d\"\n    ) as CanvasRenderingContext2D;\n  }\n\n  execute(delta: number, time: number): void {\n    // Render Position for all the transform entities.\n    this.queries.transformEntities.results.forEach((entity) => {\n      let transform = entity.getComponent(Transform2DData);\n      let x = transform.position.x;\n      let y = transform.position.y;\n\n      // Draw a circle at the position.\n      this.canvasContext.save();\n      this.canvasContext.translate(x, y);\n\n      // Draw a circle.\n      this.canvasContext.fillStyle = \"green\";\n      this.canvasContext.beginPath();\n      this.canvasContext.arc(0, 0, 5, 0, 2 * Math.PI);\n      this.canvasContext.fill();\n\n      // Draw a red arrow for positive X axis.\n      this.canvasContext.beginPath();\n      this.canvasContext.moveTo(0, 0);\n      this.canvasContext.strokeStyle = \"red\";\n      this.canvasContext.lineWidth = arrowWidth;\n      this.canvasContext.lineTo(arrowLength - 10, 0);\n      this.canvasContext.stroke();\n      // Draw a red arrow top for positive X axis.\n      this.canvasContext.beginPath();\n      this.canvasContext.fillStyle = \"red\";\n      this.canvasContext.moveTo(arrowLength, 0);\n      this.canvasContext.lineTo(arrowLength - 10, 5);\n      this.canvasContext.lineTo(arrowLength - 10, -5);\n      this.canvasContext.closePath();\n      this.canvasContext.fill();\n\n      // Draw a blue arrow for positive Y axis.\n      this.canvasContext.beginPath();\n      this.canvasContext.moveTo(0, 0);\n      this.canvasContext.strokeStyle = \"blue\";\n      this.canvasContext.lineWidth = arrowWidth;\n      this.canvasContext.lineTo(0, arrowLength - 10);\n      this.canvasContext.stroke();\n      // Draw a blue arrow top for positive Y axis.\n      this.canvasContext.beginPath();\n      this.canvasContext.fillStyle = \"blue\";\n      this.canvasContext.moveTo(0, arrowLength);\n      this.canvasContext.lineTo(5, arrowLength - 10);\n      this.canvasContext.lineTo(-5, arrowLength - 10);\n      this.canvasContext.closePath();\n      this.canvasContext.fill();\n\n      this.canvasContext.restore();\n    });\n  }\n}\n","import { Attributes, System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { DraggableHighlightTag } from \"../TagComponents/Demo2/DraggableHighlightTag\";\n\nexport class DraggableHighlightRenderSystem extends System {\n  static queries: SystemQueries = {\n    highlightEntities: {\n      components: [Transform2DData, DraggableHighlightTag],\n    },\n  };\n\n  mainCanvas: HTMLCanvasElement;\n  canvasContext: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes) {\n    this.mainCanvas = attributes.canvas;\n    this.canvasContext = this.mainCanvas.getContext(\"2d\");\n  }\n\n  execute(delta: number, time: number): void {\n    this.queries.highlightEntities.results.forEach((entity) => {\n      // Get Transform2DData.\n      const transform = entity.getComponent(Transform2DData);\n\n      // Draw a circle at the entity's position.\n      this.canvasContext.beginPath();\n      this.canvasContext.strokeStyle = \"blue\";\n      this.canvasContext.arc(\n        transform.position.x,\n        transform.position.y,\n        30,\n        0,\n        2 * Math.PI\n      );\n      this.canvasContext.stroke();\n    });\n  }\n}\n","import { Attributes, Entity, System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { DebugTag } from \"../TagComponents/Demo2/DebugTag\";\nimport { DraggableHighlightTag } from \"../TagComponents/Demo2/DraggableHighlightTag\";\nimport { DraggableTag } from \"../TagComponents/Demo2/DraggableTag\";\nimport { Vector2 } from \"../Utils/Vector2\";\n\n// The maximum distance between the mouse and the entity to be considered interacting.\nconst interactRadius = 30;\n\nexport class DraggableSystem extends System {\n  static queries: SystemQueries = {\n    draggableEntities: {\n      components: [DraggableTag, Transform2DData],\n    },\n    highlightEntities: {\n      components: [DraggableHighlightTag],\n    },\n  };\n\n  // Main canvas.\n  mainCanvas: HTMLCanvasElement;\n  // Current mouse position.\n  mousePos: Vector2 = new Vector2(0, 0);\n  // If the mouse is down currently.\n  isMouseDown: boolean = false;\n\n  // The entity that is closest to the mouse and has the DraggableTag.\n  closestEntity: Entity = null;\n  // The entity is being dragged.\n  currEntity: Entity = null;\n\n  init(attributes?: Attributes) {\n    this.mainCanvas = attributes.canvas;\n\n    // Add mouse event canvas mouse move event.\n    this.mainCanvas.addEventListener(\"mousemove\", (event) => {\n      let newMousePos = this.getMousePos(this.mainCanvas, event);\n      // Get the delta mouse position.\n      let deltaMousePos = Vector2.sub(newMousePos, this.mousePos);\n      // Set the mouse position.\n      this.mousePos = newMousePos;\n\n      // Move the selected entity if the mouse is down.\n      if (this.isMouseDown && this.currEntity != null) {\n        const transform = this.currEntity.getMutableComponent(Transform2DData);\n        transform.position = Vector2.add(transform.position, deltaMousePos);\n      }\n    });\n\n    // Add mouse event canvas mouse down event.\n    this.mainCanvas.addEventListener(\"mousedown\", (event) => {\n      this.isMouseDown = true;\n      this.updateSelectedEntity();\n\n      this.mousePos = this.getMousePos(this.mainCanvas, event);\n    });\n\n    // Add mouse event canvas mouse up event.\n    this.mainCanvas.addEventListener(\"mouseup\", (event) => {\n      this.isMouseDown = false;\n    });\n  }\n\n  execute(delta: number, time: number): void {\n    // Return if the current mouse is down.\n    if (this.isMouseDown) {\n      return;\n    }\n\n    let highlightEntity: Entity = null;\n    let highlightDistance: number = 0;\n\n    this.queries.draggableEntities.results.forEach((entity) => {\n      // Get the entity's transform.\n      const transform = entity.getComponent(Transform2DData);\n      // Calculate the distance between the mouse and the entity.\n      const distance = Vector2.sub(\n        this.mousePos,\n        transform.position\n      ).magnitude();\n\n      // If the distance is larger than the interact radius, skip.\n      if (distance > interactRadius) {\n        return;\n      }\n\n      // If highlighted entity is null or the distance is less than the current highlighted entity.\n      if (highlightEntity == null || distance < highlightDistance) {\n        highlightEntity = entity;\n        highlightDistance = distance;\n      }\n    });\n\n    // Clear all highlight tags.\n    this.queries.highlightEntities.results.forEach((entity) => {\n      if (entity != highlightEntity) {\n        entity.removeComponent(DraggableHighlightTag);\n      }\n    });\n\n    // Add highlight tag to the closest entity.\n    if (\n      highlightEntity &&\n      !highlightEntity.hasComponent(DraggableHighlightTag)\n    ) {\n      highlightEntity.addComponent(DraggableHighlightTag);\n    }\n\n    // Set the closest entity.\n    this.closestEntity = highlightEntity;\n  }\n\n  getMousePos(canvas: HTMLCanvasElement, event: MouseEvent): Vector2 {\n    const rect = canvas.getBoundingClientRect();\n    return new Vector2(event.clientX - rect.left, event.clientY - rect.top);\n  }\n\n  updateSelectedEntity() {\n    // When there is no selected entity, and there is a closest entity, select the closest entity.\n    if (this.currEntity == null && this.closestEntity != null) {\n      this.currEntity = this.closestEntity;\n      // Add DebugTag to the selected entity.\n      this.currEntity.addComponent(DebugTag);\n    } else if (this.currEntity != null && this.closestEntity == null) {\n      // Remove DebugTag from the selected entity.\n      this.currEntity.removeComponent(DebugTag);\n      this.currEntity = null;\n    } else if (this.currEntity != null && this.closestEntity != null) {\n      // If the selected entity is not the closest entity, select the closest entity.\n      if (this.currEntity != this.closestEntity) {\n        this.currEntity.removeComponent(DebugTag);\n        this.currEntity = this.closestEntity;\n        this.currEntity.addComponent(DebugTag);\n      }\n    }\n  }\n}\n","import { System, SystemQueries } from \"ecsy\";\nimport { MassData } from \"../DataComponents/Demo2/MassData\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { VelocityData } from \"../DataComponents/Demo2/VelocityData\";\nimport { MoonTag } from \"../TagComponents/Demo2/MoonTag\";\nimport { PlanetTag } from \"../TagComponents/Demo2/PlanetTag\";\nimport { Vector2 } from \"../Utils/Vector2\";\n\n// Gravity constant.\nconst G = 6.67408 * Math.pow(10, -11);\n\nexport class GravitySystem extends System {\n  static queries: SystemQueries = {\n    planets: {\n      components: [PlanetTag, Transform2DData, MassData],\n    },\n    moons: {\n      components: [MoonTag, Transform2DData, VelocityData, MassData],\n    },\n  };\n\n  execute(delta: number, time: number): void {\n    // Get all planets.\n    const planets = this.queries.planets.results;\n    // Get all moons.\n    const moons = this.queries.moons.results;\n\n    // For each planet.\n    planets.forEach((planet) => {\n      // Get planet's Transform2DData.\n      const planetTransform = planet.getComponent(Transform2DData);\n      // Get planet's MassData.\n      const planetMass = planet.getComponent(MassData);\n\n      // For each moon.\n      moons.forEach((moon) => {\n        // Get moon's Transform2DData.\n        const moonTransform = moon.getComponent(Transform2DData);\n        // Get moon's VelocityData.\n        const moonVelocity = moon.getMutableComponent(VelocityData);\n        // Get moon's MassData.\n        const moonMass = moon.getComponent(MassData);\n\n        // Get the distance between the planet and the moon.\n        const distance = Vector2.sub(\n          planetTransform.position,\n          moonTransform.position\n        ).magnitude();\n        // Get the force of gravity.\n        const force = (planetMass.mass * moonMass.mass) / (distance * distance);\n        // Get the direction of the force.\n        const direction = Vector2.sub(\n          planetTransform.position,\n          moonTransform.position\n        ).normalize();\n        // Get the acceleration of the force.\n        const acceleration = Vector2.scale(direction, force / moonMass.mass);\n\n        // Apply the acceleration to the moon's velocity.\n        moonVelocity.velocity = Vector2.add(\n          moonVelocity.velocity,\n          acceleration\n        );\n      });\n    });\n  }\n}\n","import { Attributes, System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { MoonTag } from \"../TagComponents/Demo2/MoonTag\";\n\nconst moonSize = 10;\n\nexport class MoonRenderSystem extends System {\n  static queries: SystemQueries = {\n    moons: {\n      components: [MoonTag, Transform2DData],\n    },\n  };\n\n  // Main canvas.\n  mainCanvas: HTMLCanvasElement;\n  // Canvas context.\n  canvasContext: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes) {\n    this.mainCanvas = attributes.canvas;\n    this.canvasContext = this.mainCanvas.getContext(\"2d\");\n  }\n\n  execute(delta: number, time: number): void {\n    this.queries.moons.results.forEach((entity) => {\n      // Get Transform2DData.\n      const transform = entity.getComponent(Transform2DData);\n\n      // Draw a circle at the entity's position.\n      this.canvasContext.beginPath();\n      this.canvasContext.fillStyle = \"black\";\n      this.canvasContext.arc(\n        transform.position.x,\n        transform.position.y,\n        moonSize,\n        0,\n        2 * Math.PI\n      );\n      this.canvasContext.fill();\n    });\n  }\n}\n","import { Attributes, System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { PlanetTag } from \"../TagComponents/Demo2/PlanetTag\";\n\nconst planetSize = 20;\n\nexport class PlanetRenderSystem extends System {\n  static queries: SystemQueries = {\n    planets: {\n      components: [PlanetTag, Transform2DData],\n    },\n  };\n\n  // Main canvas.\n  mainCanvas: HTMLCanvasElement;\n  // Canvas context.\n  canvasContext: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes) {\n    this.mainCanvas = attributes.canvas;\n    this.canvasContext = this.mainCanvas.getContext(\"2d\");\n  }\n\n  execute(delta: number, time: number): void {\n    this.queries.planets.results.forEach((entity) => {\n      // Get Transform2DData.\n      const transform = entity.getComponent(Transform2DData);\n\n      // Draw a circle at the entity's position.\n      this.canvasContext.beginPath();\n      this.canvasContext.fillStyle = \"orange\";\n      this.canvasContext.arc(\n        transform.position.x,\n        transform.position.y,\n        planetSize,\n        0,\n        2 * Math.PI\n      );\n      this.canvasContext.fill();\n    });\n  }\n}\n","import { System, SystemQueries } from \"ecsy\";\nimport { Transform2DData } from \"../DataComponents/Demo2/Transform2DData\";\nimport { VelocityData } from \"../DataComponents/Demo2/VelocityData\";\n\nexport class VelocityMoveSystem extends System {\n  static queries: SystemQueries = {\n    entities: {\n      components: [VelocityData, Transform2DData],\n    },\n  };\n\n  execute(delta: number, time: number): void {\n    this.queries.entities.results.forEach((entity) => {\n      // Get Transform2DData.\n      const transform = entity.getComponent(Transform2DData);\n      // Get VelocityData.\n      const velocity = entity.getComponent(VelocityData);\n\n      // Update position.\n      transform.position.x += velocity.velocity.x * delta;\n      transform.position.y += velocity.velocity.y * delta;\n    });\n  }\n}\n","import { TagComponent } from \"ecsy\";\n\nexport class DebugTag extends TagComponent {}\n","import { TagComponent } from \"ecsy\";\n\nexport class DraggableHighlightTag extends TagComponent {}\n","import { TagComponent } from \"ecsy\";\n\nexport class DraggableTag extends TagComponent {}\n","import { TagComponent } from \"ecsy\";\n\nexport class MoonTag extends TagComponent {}\n","import { TagComponent } from \"ecsy\";\n\nexport class PlanetTag extends TagComponent {}\n","import { cloneClonable, copyCopyable, createType } from \"ecsy\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  copy(v: Vector2) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n\n  clone() {\n    return new Vector2(this.x, this.y);\n  }\n\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    const magnitude = this.magnitude();\n    let out = new Vector2();\n    out.x = this.x / magnitude;\n    out.y = this.y / magnitude;\n    return out;\n  }\n\n  static add(v1: Vector2, v2: Vector2) {\n    let out = new Vector2();\n    out.x = v1.x + v2.x;\n    out.y = v1.y + v2.y;\n    return out;\n  }\n\n  static sub(v1: Vector2, v2: Vector2) {\n    let out = new Vector2();\n    out.x = v1.x - v2.x;\n    out.y = v1.y - v2.y;\n    return out;\n  }\n\n  static scale(v: Vector2, s: number) {\n    let out = new Vector2();\n    out.x = v.x * s;\n    out.y = v.y * s;\n    return out;\n  }\n}\n\nexport const Vector2Type = createType({\n  name: \"Vector2\",\n  default: new Vector2(0, 0),\n  copy: copyCopyable<Vector2>,\n  clone: cloneClonable<Vector2>,\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(226);\n"],"names":["hookConsoleAndErrors","connection","forEach","key","console","fn","bind","args","send","method","type","JSON","stringify","apply","window","addEventListener","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","document","createElement","style","cssText","innerHTML","body","appendChild","enableRemoteDevtools","warn","generateNewCode","localStorage","clear","setItem","location","reload","getItem","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","Version","worldsBeforeLoading","onWorldCreated","e","world","detail","version","push","onLoaded","peer","Peer","host","secure","port","config","iceServers","url","debug","on","data","script","setAttribute","onload","parentNode","removeChild","removeEventListener","event","CustomEvent","dispatchEvent","head","documentElement","value","eval","returnEval","urlParams","URLSearchParams","search","has","generateId","length","result","characters","charactersLength","i","charAt","Math","floor","random","injectScript","src","onLoad","queryKey","Components","ids","n","T","componentRegistered","Error","operator","Component","_typeId","sort","join","hasWindow","now","performance","Date","undefined","isComponent","SystemManager","constructor","this","_systems","_executeSystems","lastExecutedSystem","registerSystem","SystemClass","attributes","isSystem","name","getSystem","getName","system","init","order","execute","sortSystems","unregisterSystem","splice","indexOf","a","b","priority","find","s","getSystems","removeSystem","index","executeSystem","delta","time","initialized","canExecute","startTime","executeTime","clearEvents","stop","forcePlay","enabled","stats","numSystems","systems","systemStats","queries","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","expand","acquire","round","pop","release","item","reset","clone","_pool","totalSize","totalFree","totalUsed","EventDispatcher","_listeners","fired","handled","eventName","listener","listeners","hasEventListener","listenerArray","entity","component","array","slice","call","resetCounters","Query","manager","NotComponents","entities","eventDispatcher","reactive","_entities","match","addEntity","prototype","ENTITY_ADDED","removeEntity","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","toJSON","components","included","map","C","not","numEntities","numComponents","COMPONENT_CHANGED","QueryManager","_world","_queries","onEntityRemoved","queryName","query","onEntityComponentAdded","onEntityComponentRemoved","getQuery","props","schema","hasOwnProperty","schemaProp","default","copy","source","prop","dispose","checkUndefinedAttributes","Object","keys","srcKey","displayName","SystemStateComponent","isSystemStateComponent","EntityPool","entityManager","entityClass","super","EntityManager","componentsManager","_nextEntityId","_entitiesByNames","_queryManager","_entityPool","options","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","createEntity","alive","ENTITY_CREATED","entityAddComponent","values","_ComponentsMap","_ComponentTypes","__proto__","numStateComponents","componentPool","getComponentsPool","_components","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","_componentsToRemove","remove","componentRemovedFromEntity","entityRemoveAllComponents","j","_releaseEntity","removeAllEntities","processDeferredRemoval","queryComponents","numQueries","numComponentPool","_componentPool","ecsyComponentId","pool","used","size","ComponentManager","nextComponentId","hasComponent","registerComponent","objectPool","propName","WeakMap","Entity","_entityManager","id","getComponent","includeRemoved","getRemovedComponent","getComponents","getComponentsToRemove","getComponentTypes","getMutableComponent","addComponent","removeComponent","forceImmediate","hasRemovedComponent","removeAllComponents","srcComponent","DEFAULT_OPTIONS","World","assign","systemManager","eventQueues","lastTime","System","hasRegisteredComponent","play","_mandatoryQueries","queryConfig","unregisteredComponents","filter","c","mandatory","results","validEvents","eventMapping","added","removed","changed","listen","eventList","Array","isArray","changedComponent","json","queryDefinition","jsonQuery","Not","TagComponent","isTagComponent","copyValue","cloneValue","copyArray","dest","cloneArray","copyJSON","parse","cloneJSON","copyCopyable","cloneClonable","createType","typeDefinition","undefinedProperties","p","isType","Types","Number","Boolean","String","Ref","LineData","points","sourcePoint","point","x","y","ValueData","intVal","strVal","MassData","mass","Transform2DData","position","Vector2Type","Vector2","VelocityData","velocity","demo1","debugTextArea","getElementById","debugButton","valueData","BasicComponentDemo","transform2D","CustomTypeDemo","randomOriginalButton","copyComponent","lineData","lineData2","CustomComponentDemo","mainUpdate","requestAnimationFrame","demo2","mainCanvas","DebugTag","DraggableTag","DraggableHighlightTag","PlanetTag","MoonTag","DraggableSystem","canvas","VelocityMoveSystem","GravitySystem","ClearCanvasSystem","MoonRenderSystem","PlanetRenderSystem","DebugRenderSystem","DraggableHighlightRenderSystem","width","height","canvasContext","getContext","clearRect","transformEntities","transform","save","translate","fillStyle","beginPath","arc","PI","fill","moveTo","strokeStyle","lineWidth","lineTo","arrowLength","stroke","closePath","restore","highlightEntities","mousePos","isMouseDown","closestEntity","currEntity","newMousePos","getMousePos","deltaMousePos","sub","add","updateSelectedEntity","highlightEntity","highlightDistance","draggableEntities","distance","magnitude","rect","getBoundingClientRect","clientX","left","clientY","top","pow","planets","moons","planet","planetTransform","planetMass","moon","moonTransform","moonVelocity","moonMass","force","direction","normalize","acceleration","scale","set","v","sqrt","out","static","v1","v2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","r","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}