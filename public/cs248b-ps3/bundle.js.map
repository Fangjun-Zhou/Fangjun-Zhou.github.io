{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ps3-pinball/./src/ball.ts","webpack://ps3-pinball/./src/consts.ts","webpack://ps3-pinball/./src/main.ts","webpack://ps3-pinball/./src/math-utils.ts","webpack://ps3-pinball/./src/obstacles/box-obstacle.ts","webpack://ps3-pinball/./src/obstacles/circle-bumper.ts","webpack://ps3-pinball/./src/obstacles/circle-obstacle.ts","webpack://ps3-pinball/./src/obstacles/cirlce-target.ts","webpack://ps3-pinball/./src/obstacles/flipper.ts","webpack://ps3-pinball/./src/obstacles/obstacle.ts","webpack://ps3-pinball/./src/sdf.ts","webpack://ps3-pinball/external var \"p5\"","webpack://ps3-pinball/webpack/bootstrap","webpack://ps3-pinball/webpack/runtime/global","webpack://ps3-pinball/webpack/runtime/publicPath","webpack://ps3-pinball/webpack/startup"],"sourcesContent":["import p5, { Color, SoundFile, Vector } from \"p5\";\nimport { GameObject } from \"./interfaces\";\nimport { MathUtils } from \"./math-utils\";\nimport { RigidBody } from \"./rigidbody\";\nimport { distanceScene, SDF } from \"./sdf\";\nimport { HEIGHT } from \"./consts\";\nimport { BoxObstacle } from \"./obstacles/box-obstacle\";\nimport { Flipper } from \"./obstacles/flipper\";\nimport { CircleBumper } from \"./obstacles/circle-bumper\";\nimport { Obstacle } from \"./obstacles/obstacle\";\nimport P5Sound from \"p5/lib/addons/p5.sound\";\n\nimport obstacleSfx1 from \"../public/pinball-sfx/obstacle1.mp3\";\nimport obstacleSfx2 from \"../public/pinball-sfx/obstacle2.mp3\";\nimport bumperSfx1 from \"../public/pinball-sfx/bumper1.mp3\";\nimport bumperSfx2 from \"../public/pinball-sfx/bumper2.mp3\";\nimport ballSfx from \"../public/pinball-sfx/ball.mp3\";\n\ndeclare var maxPenetrationDepth: number;\nvar maxPenetrationDepth = 0;\n\nexport class Ball implements GameObject, RigidBody {\n  p: p5;\n  math: MathUtils;\n  sdf: SDF;\n\n  pos: Vector;\n  vel: Vector;\n  radius: number;\n  cor: number;\n\n  endzone: number;\n  endzonCallback: (ball: Ball) => void;\n\n  physicObjects: RigidBody[];\n\n  strokeWidth: number;\n  fillColor: Color;\n  highlightColor: Color;\n  strokeColor: Color;\n\n  highlight = false;\n\n  obstacleSfx: SoundFile[];\n  obstacleSfxReady: boolean[];\n  ballSfx: SoundFile[];\n  ballSfxReady: boolean[];\n\n  constructor(\n    p: p5,\n    pos: Vector,\n    vel: Vector,\n    r: number,\n    cor: number = 1,\n    endzone: number,\n    endzonCallback: (ball: Ball) => void,\n    physicObjects: RigidBody[],\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    highlightColor: Color | undefined = undefined,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    this.p = p;\n    this.math = new MathUtils(p);\n    this.sdf = new SDF(p);\n\n    this.pos = pos;\n    this.vel = vel;\n    this.radius = r;\n    this.cor = cor;\n    this.endzone = endzone;\n    this.endzonCallback = endzonCallback;\n\n    this.physicObjects = physicObjects;\n\n    this.strokeWidth = strokeWidth;\n    this.fillColor = fillColor ? fillColor : p.color(255, 0, 255, 255);\n    this.highlightColor = highlightColor\n      ? highlightColor\n      : p.color(0, 255, 0, 255);\n    this.strokeColor = strokeColor ? strokeColor : p.color(0, 0, 0, 255);\n\n    this.obstacleSfx = [];\n    this.obstacleSfxReady = [];\n    [obstacleSfx1, obstacleSfx2, bumperSfx1, bumperSfx2].forEach(\n      (sfxPath, i) => {\n        this.obstacleSfx.push(\n          this.p.loadSound(sfxPath, () => (this.obstacleSfxReady[i] = true)),\n        );\n        this.obstacleSfxReady.push(false);\n      },\n    );\n    this.ballSfx = [];\n    this.ballSfxReady = [];\n    [ballSfx].forEach((sfxPath, i) => {\n      this.ballSfx.push(\n        this.p.loadSound(sfxPath, () => (this.ballSfxReady[i] = true)),\n      );\n      this.ballSfxReady.push(false);\n    });\n  }\n\n  getCor(): number {\n    return this.cor;\n  }\n\n  distance(p: Vector): number {\n    let v = this.math.vsub(p, this.pos);\n    return this.sdf.sdCircle(v, this.radius);\n  }\n\n  normal(p: Vector): Vector {\n    return this.normalFD2(p);\n  }\n\n  normalFD2(p: Vector): Vector {\n    const h = 0.001;\n    let q1 = this.math.vec2(p.x, p.y);\n    let q2 = this.math.vec2(p.x, p.y);\n    q1.x += h;\n    q2.x -= h;\n    let dxh1 = this.distance(q1);\n    let dxh2 = this.distance(q2);\n    q1.x -= h;\n    q2.x += h;\n    q1.y += h;\n    q2.y -= h;\n    let dyh1 = this.distance(q1);\n    let dyh2 = this.distance(q2);\n    let n = this.math\n      .vec2((dxh1 - dxh2) / (2 * h), (dyh1 - dyh2) / (2 * h))\n      .normalize();\n    return n;\n  }\n\n  velocity(p: Vector): Vector {\n    return this.vel;\n  }\n\n  notifyOfCollision(rig: RigidBody): void {\n    if (rig instanceof Obstacle) {\n      let idx = this.p.floor(this.p.random(0, this.obstacleSfx.length));\n      if (this.obstacleSfxReady[idx]) this.obstacleSfx[idx].play();\n    } else if (rig instanceof Ball) {\n      let idx = this.p.floor(this.p.random(0, this.ballSfx.length));\n      if (this.ballSfxReady[idx]) this.ballSfx[idx].play();\n    }\n  }\n\n  draw(): void {\n    this.p.push();\n\n    this.p.fill(this.strokeColor);\n    this.p.circle(this.pos.x, this.pos.y, this.radius);\n    if (this.highlight) this.p.fill(this.highlightColor);\n    else this.p.fill(this.fillColor);\n    this.p.circle(this.pos.x, this.pos.y, this.radius - this.strokeWidth);\n\n    this.p.pop();\n  }\n\n  rayMarch(origin: Vector, march: Vector): [number, RigidBody | null] {\n    const eps = 0.00001;\n    let marchDist = this.math.length(march);\n    let marchDir = this.math.vmult(march, 1 / marchDist);\n\n    let currPoint = origin.copy();\n    let hitDist = 0;\n    while (hitDist < marchDist) {\n      let [sceneDist, rig] = distanceScene(\n        currPoint,\n        this.physicObjects.filter((v, _1, _2) => v != this),\n        this.sdf,\n      );\n      // No scene.\n      if (rig == null) return [sceneDist, rig];\n      // Negative scene distance.\n      sceneDist = sceneDist - this.radius;\n      // Increment hit distance.\n      hitDist += sceneDist;\n      // Hit.\n      if (sceneDist < eps) {\n        return [hitDist, rig];\n      }\n      currPoint = this.math.vadd(\n        currPoint,\n        this.math.vmult(marchDir, sceneDist),\n      );\n    }\n    return [marchDist, null];\n  }\n\n  update(dt: number): void {\n    // Determine endzone.\n    if (this.pos.y >= this.endzone) {\n      this.endzonCallback(this);\n    }\n\n    // Velocity update.\n    const g = (+9.81 * 0.113203 * HEIGHT) / 2;\n    this.vel.y += dt * g;\n\n    // Collision detection.\n    const maxRayMarchBounce = 128;\n    let checkT = dt;\n    for (let i = 0; i < maxRayMarchBounce; i++) {\n      let [hitDist, hitRig] = this.rayMarch(\n        this.pos,\n        this.math.vmult(this.vel, checkT),\n      );\n      if (hitRig == null) {\n        break;\n      }\n      // Move ball.\n      if (hitDist > 0) {\n        let relVel = this.math.vsub(this.vel, hitRig.velocity(this.pos));\n        let velDir = this.math.vmult(relVel, 1 / this.math.length(relVel));\n        this.pos.add(this.math.vmult(velDir, this.p.abs(hitDist - 0.0001)));\n      } else {\n        let penetrateDist = hitRig.distance(this.pos) - this.radius;\n        this.pos.add(\n          this.math.vmult(hitRig.normal(this.pos), -penetrateDist + 0.0001),\n        );\n      }\n      // Obstacle normal.\n      let n = hitRig.normal(this.pos);\n      // Normal component velocity.\n      let vn = this.vel.dot(n) - hitRig.velocity(this.pos).dot(n);\n      // Impact.\n      if (vn < 0) {\n        let hitEnergy;\n        if (hitRig instanceof Obstacle) hitEnergy = hitRig.getEnergy();\n        else hitEnergy = 0;\n        let eps = hitRig.getCor() * this.getCor();\n        vn *= -(1 + eps - hitEnergy / vn);\n        n.mult(vn);\n        this.vel.add(n);\n        hitRig.notifyOfCollision(this);\n        this.notifyOfCollision(hitRig);\n      }\n      // Update time.\n      let hitT = hitDist / this.math.length(this.vel);\n      if (hitT < 0) {\n        break;\n      }\n      checkT -= hitT;\n      if (checkT < 0) break;\n    }\n\n    // Symplectic position update.\n    this.math.vacc(this.pos, checkT, this.vel);\n  }\n}\n","export const HEIGHT = 1.0;\nexport const WIDTH = HEIGHT / 1.5;\nexport const FRAME_RATE = 60;\n","import p5, { Image, SoundFile } from \"p5\";\n\nimport { Ball } from \"./ball\";\nimport { FRAME_RATE, HEIGHT, WIDTH } from \"./consts\";\nimport { GameObject } from \"./interfaces\";\nimport { MathUtils } from \"./math-utils\";\nimport { BoxObstacle } from \"./obstacles/box-obstacle\";\nimport { CircleObstacle } from \"./obstacles/circle-obstacle\";\nimport { Obstacle } from \"./obstacles/obstacle\";\nimport { RigidBody } from \"./rigidbody\";\nimport { drawSDFRaster } from \"./sdf\";\nimport { Flipper } from \"./obstacles/flipper\";\nimport { CircleTarget } from \"./obstacles/cirlce-target\";\nimport { CircleBumper } from \"./obstacles/circle-bumper\";\n\nimport hooverTower from \"../public/hoover-tower.png\";\n\nfunction sketch(p: p5) {\n  /* ---------------------------------------------------------- */\n  /*                        Game States                         */\n  /* ---------------------------------------------------------- */\n\n  // MathUtils.\n  let math = new MathUtils(p);\n  let background: Image;\n  // All drawable objects, including static obstacles, and moving objects.\n  let gameObjects: GameObject[] = [];\n  // All scene objects with SDF function.\n  let physicsObjects: RigidBody[] = [];\n  // If the game has been paused.\n  let pause = false;\n  // End zone point\n  let endzone = HEIGHT - 0.06;\n  // Show game hint\n  let showHint = true;\n  // End game indicator\n  let gameOver = false;\n  // Final score\n  let coin = 1;\n  let ballCost = 1;\n  let score = 0;\n\n  /* ---------------------------------------------------------- */\n  /*                         Game Utils                         */\n  /* ---------------------------------------------------------- */\n\n  let levelSetup = function () {\n    // Add a box.\n    let domainBox = new BoxObstacle(\n      p,\n      math.vec2(WIDTH / 2, HEIGHT / 2),\n      0,\n      WIDTH / 2,\n      HEIGHT / 2,\n      1,\n      0,\n      p.color(0, 0, 0, 0),\n      p.color(0, 0, 0, 0),\n    );\n    domainBox.invert();\n    gameObjects.push(domainBox);\n    physicsObjects.push(domainBox);\n\n    let boxObstacle1 = new BoxObstacle(\n      p,\n      math.vec2(WIDTH / 2 - 0.15, HEIGHT / 2 - 0.2 * HEIGHT),\n      p.PI / 4,\n      0.1,\n      0.05,\n      1,\n      0.005,\n      p.color(\"#D76C82\"),\n      p.color(0, 0, 0),\n    );\n    gameObjects.push(boxObstacle1);\n    physicsObjects.push(boxObstacle1);\n    let boxObstacle2 = new BoxObstacle(\n      p,\n      math.vec2(WIDTH / 2 + 0.15, HEIGHT / 2 - 0.2 * HEIGHT),\n      -p.PI / 4,\n      0.1,\n      0.05,\n      1,\n      0.005,\n      p.color(\"#D76C82\"),\n      p.color(0, 0, 0),\n    );\n    gameObjects.push(boxObstacle2);\n    physicsObjects.push(boxObstacle2);\n\n    // Bumpers.\n    let circleBumper1 = new CircleBumper(\n      p,\n      math.vec2(WIDTH / 2 + 0.2 * WIDTH, HEIGHT / 2),\n      0.1 * WIDTH,\n      0.9,\n      1,\n      () => {\n        score += 100;\n      },\n      0.005,\n      p.color(\"#C5D3E8\"),\n      p.color(\"#D0E8C5\"),\n    );\n    gameObjects.push(circleBumper1);\n    physicsObjects.push(circleBumper1);\n\n    let circleBumper2 = new CircleBumper(\n      p,\n      math.vec2(WIDTH / 2 - 0.2 * WIDTH, HEIGHT / 2),\n      0.1 * WIDTH,\n      0.9,\n      1,\n      () => {\n        score += 100;\n      },\n      0.005,\n      p.color(\"#C5D3E8\"),\n      p.color(\"#D0E8C5\"),\n    );\n    gameObjects.push(circleBumper2);\n    physicsObjects.push(circleBumper2);\n\n    // Add a coin circle.\n    let coinCircle1 = new CircleTarget(\n      p,\n      math.vec2(0.5 * WIDTH, 0.1 * HEIGHT),\n      0.1 * WIDTH,\n      0.9,\n      () => {\n        coin += ballCost;\n      },\n      0.005,\n      p.color(\"#C5D3E8\"),\n    );\n    gameObjects.push(coinCircle1);\n    physicsObjects.push(coinCircle1);\n\n    // Add flipper.\n    let flipper1 = new Flipper(\n      p,\n      math.vec2(0.1 * WIDTH, 0.8 * HEIGHT),\n      0.1 * WIDTH,\n      0.05 * WIDTH,\n      0.3 * WIDTH,\n      -p.PI / 6,\n      p.PI / 6,\n      5,\n      () => p.keyIsDown(70),\n      1,\n      0.005,\n      p.color(\"#FFF8DE\"),\n    );\n    gameObjects.push(flipper1);\n    physicsObjects.push(flipper1);\n\n    let boxObstacle3 = new BoxObstacle(\n      p,\n      math.vec2(0, 0.7 * HEIGHT),\n      -p.PI / 3,\n      0.1,\n      0.05,\n      1,\n      0.01,\n      p.color(0, 0, 0, 0),\n      p.color(0, 0, 0, 0),\n    );\n    gameObjects.push(boxObstacle3);\n    physicsObjects.push(boxObstacle3);\n\n    let flipper2 = new Flipper(\n      p,\n      math.vec2(0.9 * WIDTH, 0.8 * HEIGHT),\n      0.1 * WIDTH,\n      0.05 * WIDTH,\n      0.3 * WIDTH,\n      (7 * p.PI) / 6,\n      (5 * p.PI) / 6,\n      5,\n      () => p.keyIsDown(74),\n      1,\n      0.005,\n      p.color(\"#FFF8DE\"),\n    );\n    gameObjects.push(flipper2);\n    physicsObjects.push(flipper2);\n\n    let boxObstacle4 = new BoxObstacle(\n      p,\n      math.vec2(WIDTH, 0.7 * HEIGHT),\n      p.PI / 3,\n      0.1,\n      0.05,\n      1,\n      0.01,\n      p.color(0, 0, 0, 0),\n      p.color(0, 0, 0, 0),\n    );\n    gameObjects.push(boxObstacle4);\n    physicsObjects.push(boxObstacle4);\n  };\n\n  let resetGame = function () {\n    // Reset gameObjects and physicsObjects;\n    gameObjects = [];\n    physicsObjects = [];\n    levelSetup();\n\n    // Init 1 ball.\n    coin = ballCost;\n    // Reset score.\n    score = 0;\n    showHint = true;\n    gameOver = false;\n  };\n\n  let emittBall = function () {\n    showHint = false;\n    // Check coin.\n    if (coin >= ballCost) {\n      let ball = new Ball(\n        p,\n        math.vec2(WIDTH / 2, 0.3 * HEIGHT),\n        math.vec2(p.random(-1, 1), p.random(-1, 1)),\n        0.025,\n        0.5,\n        endzone,\n        hitEndzon,\n        physicsObjects,\n        0.005,\n        p.color(\"#FA4032\"),\n      );\n      gameObjects.push(ball);\n      physicsObjects.push(ball);\n      coin -= ballCost;\n    }\n  };\n\n  let hitEndzon = function (ball: Ball) {\n    for (let i = 0; i < gameObjects.length; i++) {\n      if (gameObjects[i] == ball) {\n        gameObjects.splice(i, 1);\n        break;\n      }\n    }\n    for (let i = 0; i < physicsObjects.length; i++) {\n      if (physicsObjects[i] == ball) {\n        physicsObjects.splice(i, 1);\n        break;\n      }\n    }\n    // Check if gameover.\n    if (gameObjects.every((item) => !(item instanceof Ball))) {\n      gameOver = true;\n      coin = 0;\n    }\n  };\n\n  /* ---------------------------------------------------------- */\n  /*                        Entry Point                         */\n  /* ---------------------------------------------------------- */\n\n  p.preload = function () {\n    background = p.loadImage(hooverTower);\n  };\n\n  /**\n   * P5.JS setup function.\n   */\n  p.setup = function () {\n    /* ----------------------- P5JS Setup ----------------------- */\n    p.createCanvas(p.windowHeight * WIDTH, p.windowHeight * HEIGHT);\n    p.frameRate(FRAME_RATE);\n    p.ellipseMode(p.RADIUS);\n    p.strokeWeight(0.002);\n\n    levelSetup();\n  };\n\n  /**\n   * P5.JS draw function. Will be call every frame.\n   */\n  p.draw = function () {\n    const dt = 1 / FRAME_RATE;\n    // Game update.\n    if (!pause) {\n      gameObjects.forEach((gamneObject) => {\n        gamneObject.update(dt);\n      });\n    }\n\n    // Clear canvas.\n    p.clear();\n\n    p.push();\n    p.noStroke();\n    p.scale(p.height / HEIGHT);\n\n    // Draw background.\n    p.image(background, 0, 0, WIDTH, HEIGHT);\n\n    if (p.keyIsPressed === true && p.key === \"s\") {\n      // Draw SDF.\n      drawSDFRaster(p, physicsObjects);\n    } else {\n      // Draw scene.\n      drawScene();\n    }\n\n    if (gameOver) {\n      displayGameOver();\n    } else {\n      displayStat();\n    }\n\n    if (showHint) displayHint();\n\n    p.pop();\n  };\n\n  function drawScene() {\n    gameObjects.forEach((drawable) => {\n      drawable.draw();\n    });\n  }\n\n  // Add scoring display for each ball\n  function displayStat() {\n    p.fill(255);\n    p.textSize(0.05);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(`Score: ${score}`, WIDTH * 0.5, HEIGHT * 0.1);\n\n    p.textSize(0.03);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(\n      `Ball Left: ${Math.floor(coin / ballCost)}`,\n      WIDTH * 0.5,\n      HEIGHT * 0.15,\n    );\n  }\n\n  function displayHint() {\n    // For end game display box\n    let displayBoxWidth = WIDTH * 0.6;\n    let displayBoxHeight = HEIGHT * 0.25;\n    let boxX = (WIDTH - displayBoxWidth) / 2;\n    let boxY = (HEIGHT - displayBoxHeight) / 2;\n    p.fill(0, 0, 0, 150);\n    p.noStroke();\n    p.rect(boxX, boxY, displayBoxWidth, displayBoxHeight);\n    // For end game text display\n    p.fill(255);\n    p.textSize(0.02);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(\"Enter [Space] to Send Balls\", WIDTH / 2, HEIGHT / 2 - 0.01);\n    p.text(\"Hit green bumpers to earn score.\", WIDTH / 2, HEIGHT / 2 + 0.01);\n    p.text(\"Hit top target to earn balls.\", WIDTH / 2, HEIGHT / 2 + 0.03);\n  }\n\n  // Display the final score for game over\n  function displayGameOver() {\n    // For end game display box\n    let displayBoxWidth = WIDTH * 0.6;\n    let displayBoxHeight = HEIGHT * 0.25;\n    let boxX = (WIDTH - displayBoxWidth) / 2;\n    let boxY = (HEIGHT - displayBoxHeight) / 2;\n    p.fill(0, 0, 0, 150);\n    p.noStroke();\n    p.rect(boxX, boxY, displayBoxWidth, displayBoxHeight);\n    // For end game text display\n    p.fill(255);\n    p.textSize(0.05);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.text(\"Game Over\", WIDTH / 2, HEIGHT / 2 - 0.03);\n    p.text(`Final Score: ${score}`, WIDTH / 2, HEIGHT / 2 + 0.03);\n    p.textSize(0.03);\n    p.text(\"Enter [r] to restart\", WIDTH / 2, HEIGHT / 2 + 0.08);\n  }\n\n  p.keyPressed = function () {\n    if (p.key === \" \") emittBall();\n    if (p.key === \"p\") pause = !pause;\n    if (p.key === \"r\") resetGame();\n  };\n}\n\nlet p5Instance = new p5(sketch);\n","/**\n * @module Some convenient GLSL-like macros for p5.Vector calculations\n */\n\nimport p5, { Vector } from \"p5\";\n\nexport class MathUtils {\n  p: p5;\n  constructor(p: p5) {\n    this.p = p;\n  }\n\n  /**\n   * Vector length.\n   */\n  length(v: Vector): number {\n    return v.mag();\n  }\n\n  /**\n   * Dot product between two vectors.\n   */\n  dot(x: Vector, y: Vector): number {\n    return x.dot(y);\n  }\n\n  /**\n   * Square of the 2-norm of a vector x.\n   */\n  dot2(x: Vector): number {\n    return x.dot(x);\n  }\n\n  /**\n   * Create new Vector2.\n   */\n  vec2(a: number, b: number): Vector {\n    return this.p.createVector(a, b);\n  }\n\n  /**\n   * Create new Vector3.\n   */\n  vec3(a: number, b: number, c: number): Vector {\n    return this.p.createVector(a, b, c);\n  }\n\n  /**\n   * Sign of a number.\n   */\n  sign(n: number): number {\n    return Math.sign(n);\n  }\n\n  /**\n   * Clamp n between low and high.\n   */\n  clamp(n: number, low: number, high: number): number {\n    return this.p.constrain(n, low, high);\n  }\n\n  /**\n   * Vector addition.\n   */\n  vadd(v: Vector, w: Vector): Vector {\n    return Vector.add(v, w);\n  }\n\n  /**\n   * Vector subtraction.\n   */\n  vsub(v: Vector, w: Vector): Vector {\n    return Vector.sub(v, w);\n  }\n\n  /**\n   * v += scale*w:  Vector accumulation of a scaled vector, w, into v.\n   */\n  vacc(v: Vector, scale: number, w: Vector): void {\n    v.x += scale * w.x;\n    v.y += scale * w.y;\n  }\n  /**\n   * Scale v by w.\n   */\n  vmult(v: Vector, scale: number): Vector {\n    return this.vec2(v.x * scale, v.y * scale);\n  }\n\n  /**\n   * Absolute value of vector components: (|v.x|, |v.y|).\n   */\n  vabs(v: Vector): Vector {\n    return this.vec2(Math.abs(v.x), Math.abs(v.y));\n  }\n\n  /**\n   * Component-wise max with a scalar, n\n   */\n  vmax(v: Vector, n: number): Vector {\n    return this.vec2(Math.max(v.x, n), Math.max(v.y, n));\n  }\n\n  /**\n   * Component-wise min with a scalar, n\n   */\n  vmin(v: Vector, n: number): Vector {\n    return this.vec2(Math.min(v.x, n), Math.min(v.y, n));\n  }\n\n  /**\n   * Shape vertex call with vec2 argument.\n   */\n  vvertex(p: Vector): void {\n    this.p.vertex(p.x, p.y);\n  }\n\n  /**\n   * 2D rotation of a vec2 by theta (radians).\n   */\n  vrotate(v: Vector, theta: number): Vector {\n    const c = this.p.cos(theta);\n    const s = this.p.sin(theta);\n    return this.vec2(c * v.x - s * v.y, s * v.x + c * v.y);\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\n\nimport { Obstacle } from \"./obstacle\";\n\nexport class BoxObstacle extends Obstacle {\n  pos: Vector;\n  rot: number;\n  bx: number;\n  by: number;\n\n  strokeWidth: number;\n  fillColor: Color;\n  strokeColor: Color;\n\n  /**\n   * @param pos - Center of the box.\n   * @param bx - half the width.\n   * @param by - half the height.\n   */\n  constructor(\n    p: p5,\n    pos: Vector,\n    rot: number,\n    bx: number,\n    by: number,\n    cor: number = 1,\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    super(p);\n    this.pos = pos;\n    this.rot = rot;\n    this.bx = bx;\n    this.by = by;\n    this.cor = cor;\n    this.strokeWidth = strokeWidth;\n    this.fillColor = fillColor ? fillColor : p.color(255, 0, 255, 255);\n    this.strokeColor = strokeColor ? strokeColor : p.color(0, 0, 0, 255);\n  }\n\n  draw(): void {\n    this.p.push();\n    this.p.translate(this.pos.x, this.pos.y);\n    this.p.rotate(-this.rot);\n    this.p.rectMode(this.p.RADIUS);\n    this.p.fill(this.strokeColor);\n    this.p.rect(0, 0, this.bx, this.by);\n    this.p.fill(this.fillColor);\n    this.p.rect(0, 0, this.bx - this.strokeWidth, this.by - this.strokeWidth);\n    this.p.pop();\n  }\n\n  distance(p: Vector): number {\n    let v = this.math.vsub(p, this.pos);\n    let vRot = this.math.vrotate(v, this.rot);\n    return (\n      this.signMultiplier *\n      this.sdf.sdBox(vRot, this.math.vec2(this.bx, this.by))\n    );\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\nimport { Ball } from \"../ball\";\nimport { RigidBody } from \"../rigidbody\";\nimport { CircleObstacle } from \"./circle-obstacle\";\n\nexport class CircleBumper extends CircleObstacle {\n  energy: number;\n  highlightColor: Color;\n  hitCallback: () => void;\n\n  currColorT: number;\n  highlightLerpSpeed: number;\n\n  constructor(\n    p: p5,\n    center: Vector,\n    radius: number,\n    cor: number = 1,\n    energy: number = 0.5,\n    hitCallback: () => void,\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    highlightColor: Color | undefined = undefined,\n    highlightLerpSpeed: number = 1,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    super(p, center, radius, cor, strokeWidth, fillColor, strokeColor);\n    this.energy = energy;\n    this.hitCallback = hitCallback;\n    this.highlightColor = highlightColor ? highlightColor : this.fillColor;\n    this.highlightLerpSpeed = highlightLerpSpeed;\n    this.currColorT = 0;\n  }\n\n  notifyOfCollision(rig: RigidBody): void {\n    if (rig instanceof Ball) {\n      this.hitCallback();\n      this.currColorT = 1;\n    }\n  }\n\n  update(dt: number): void {\n    this.currColorT = this.p.max(\n      0,\n      this.currColorT - dt * this.highlightLerpSpeed,\n    );\n  }\n\n  draw(): void {\n    this.p.push();\n\n    this.p.fill(this.strokeColor);\n    this.p.circle(this.center.x, this.center.y, this.radius);\n    this.p.fill(\n      this.p.lerpColor(this.fillColor, this.highlightColor, this.currColorT),\n    );\n    this.p.circle(this.center.x, this.center.y, this.radius - this.strokeWidth);\n\n    this.p.pop();\n  }\n\n  getEnergy(): number {\n    return this.energy;\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\nimport { Obstacle } from \"./obstacle\";\n\nexport class CircleObstacle extends Obstacle {\n  center: Vector;\n  radius: number;\n\n  strokeWidth: number;\n  fillColor: Color;\n  strokeColor: Color;\n\n  /**\n   * @param p - p5 context.\n   * @param center - center of the circle.\n   * @param radius - radius of the circle.\n   */\n  constructor(\n    p: p5,\n    center: Vector,\n    radius: number,\n    cor: number = 1,\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    super(p);\n    this.center = center;\n    this.radius = radius;\n    this.cor = cor;\n    this.strokeWidth = strokeWidth;\n    this.fillColor = fillColor ? fillColor : p.color(255, 0, 255, 255);\n    this.strokeColor = strokeColor ? strokeColor : p.color(0, 0, 0, 255);\n  }\n\n  draw(): void {\n    this.p.push();\n\n    this.p.fill(this.strokeColor);\n    this.p.circle(this.center.x, this.center.y, this.radius);\n    this.p.fill(this.fillColor);\n    this.p.circle(this.center.x, this.center.y, this.radius - this.strokeWidth);\n\n    this.p.pop();\n  }\n\n  distance(p: Vector): number {\n    let v = this.math.vsub(p, this.center);\n    return this.signMultiplier * this.sdf.sdCircle(v, this.radius);\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\nimport { CircleObstacle } from \"./circle-obstacle\";\nimport { RigidBody } from \"../rigidbody\";\nimport { Ball } from \"../ball\";\n\nexport class CircleTarget extends CircleObstacle {\n  hitCallback: () => void;\n  constructor(\n    p: p5,\n    center: Vector,\n    radius: number,\n    cor: number = 1,\n    hitCallback: () => void,\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    super(p, center, radius, cor, strokeWidth, fillColor, strokeColor);\n    this.hitCallback = hitCallback;\n  }\n\n  notifyOfCollision(rig: RigidBody): void {\n    if (rig instanceof Ball) {\n      this.hitCallback();\n    }\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\nimport { Obstacle } from \"./obstacle\";\n\nexport class Flipper extends Obstacle {\n  pivot: Vector;\n  r1: number;\n  r2: number;\n  h: number;\n  startAngle: number;\n  endAngle: number;\n  flipperSpeed: number;\n  triggerEvent: () => boolean;\n\n  strokeWidth: number;\n  fillColor: Color;\n  strokeColor: Color;\n\n  currX: number;\n  currAngle: number;\n  currOmega: number;\n\n  constructor(\n    p: p5,\n    pivot: Vector,\n    r1: number,\n    r2: number,\n    h: number,\n    startAngle: number,\n    endAngle: number,\n    flipperSpeed: number,\n    triggerEvent: () => boolean,\n    cor: number = 0.5,\n    strokeWidth: number = 0.01,\n    fillColor: Color | undefined = undefined,\n    strokeColor: Color | undefined = undefined,\n  ) {\n    super(p);\n    this.pivot = pivot;\n    this.r1 = r1;\n    this.r2 = r2;\n    this.h = h;\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.currAngle = startAngle;\n    this.currX = 0;\n    this.currOmega = 0;\n    this.flipperSpeed = flipperSpeed;\n    this.triggerEvent = triggerEvent;\n\n    this.strokeWidth = strokeWidth;\n    this.fillColor = fillColor ? fillColor : p.color(255, 0, 255, 255);\n    this.strokeColor = strokeColor ? strokeColor : p.color(0, 0, 0, 255);\n\n    this.cor = cor;\n  }\n\n  /**\n   * @param t - flipper time percentage, from 0 to 1.\n   * @returns [d, v] flipper angle percentage, flipper speed.\n   */\n  flipperProfile(t: number): [number, number] {\n    // Default linear flipper.\n    return [-this.p.sq(t) + 2 * t, -2 * t + 2];\n  }\n\n  update(dt: number): void {\n    const totalT = 1 / this.flipperSpeed;\n    if (this.triggerEvent()) {\n      this.currX += dt / totalT;\n    } else {\n      this.currX -= dt / totalT;\n    }\n    const moving = this.currX > 0 && this.currX < 1;\n    this.currX = this.math.clamp(this.currX, 0, 1);\n    const [anglePerc, omegaPerc] = this.flipperProfile(this.currX);\n    this.currAngle =\n      this.startAngle + (this.endAngle - this.startAngle) * anglePerc;\n    if (moving)\n      this.currOmega = (omegaPerc * (this.endAngle - this.startAngle)) / totalT;\n    else this.currOmega = 0;\n  }\n\n  draw(): void {\n    this.p.fill(this.strokeColor);\n    this.drawFlipper(this.r1, this.r2, this.h);\n    this.p.fill(this.fillColor);\n    this.drawFlipper(\n      this.r1 - this.strokeWidth,\n      this.r2 - this.strokeWidth,\n      this.h - 2 * this.strokeWidth,\n    );\n  }\n\n  drawFlipper(r1: number, r2: number, h: number) {\n    this.p.push();\n\n    this.p.rectMode(this.p.RADIUS);\n    this.p.translate(this.pivot.x, this.pivot.y);\n    this.p.rotate(-this.p.PI / 2.0 - this.currAngle);\n\n    let R1 = r1; // larger\n    let R2 = r2; // smaller\n\n    // DRAW IN \"DOWN\" POSITION AT ORIGIN\n    // DRAW TWO CIRCLES:\n    const c1x = 0;\n    const c1y = 0;\n    const c2x = 0;\n    const c2y = 0 + this.h;\n    this.p.circle(c1x, c1y, R1);\n    this.p.circle(c2x, c2y, R2);\n    // DRAW POLYGON FOR BODY:\n    let sinBeta = this.p.abs(R1 - R2) / this.h;\n    let cosBeta = this.p.sqrt(1.0 - this.p.sq(sinBeta));\n    const dx1 = R1 * cosBeta;\n    const dy1 = R1 * sinBeta;\n    const dx2 = R2 * cosBeta;\n    const dy2 = R2 * sinBeta;\n    // DRAW 4 VERTICES:\n    const V1 = this.math.vec2(c1x + dx1, c1y + dy1);\n    const V2 = this.math.vec2(c2x + dx2, c2y + dy2);\n    const V3 = this.math.vec2(c2x - dx2, c2y + dy2);\n    const V4 = this.math.vec2(c1x - dx1, c1y + dy1);\n    this.p.beginShape();\n    this.math.vvertex(V1); // --> vertex(V1.x, V1.y);\n    this.math.vvertex(V2);\n    this.math.vvertex(V3);\n    this.math.vvertex(V4);\n    this.p.endShape(this.p.CLOSE);\n\n    this.p.pop();\n  }\n\n  distance(p: Vector): number {\n    // p-pivot\n    let v = this.math.vsub(p, this.pivot);\n    let rotAngle = -(-this.p.PI / 2.0 - this.currAngle);\n    let vRot = this.math.vrotate(v, rotAngle);\n    return (\n      this.signMultiplier *\n      this.sdf.sdUnevenCapsule(vRot, this.r1, this.r2, this.h)\n    );\n  }\n\n  velocity(p: Vector): Vector {\n    // R*omega ... need perp vector\n    let R = this.math.vsub(p, this.pivot).mult(-this.currOmega);\n    // omega x (p-pivot)\n    return this.math.vec2(-R.y, R.x);\n  }\n}\n","import p5, { Color, Vector } from \"p5\";\nimport { MathUtils } from \"../math-utils\";\nimport { GameObject } from \"../interfaces\";\nimport { SDF } from \"../sdf\";\nimport { RigidBody } from \"../rigidbody\";\n\n/**\n * Obstacle base class.\n */\nexport class Obstacle implements GameObject, RigidBody {\n  p: p5;\n  math: MathUtils;\n  sdf: SDF;\n\n  signMultiplier: number;\n  cor: number;\n\n  constructor(p: p5) {\n    this.p = p;\n    this.math = new MathUtils(p);\n    this.sdf = new SDF(p);\n    // Outside.\n    this.signMultiplier = 1;\n    // Bounciness.\n    this.cor = 1;\n  }\n\n  /** Invert the SDF sign. */\n  invert(): void {\n    this.signMultiplier *= -1;\n  }\n\n  /** Override to draw object. */\n  draw(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * @param dt - Timestep.\n   */\n  update(dt: number): void {}\n\n  /** Callback when collision. Similar to Unity's OnCollisionEnter */\n  notifyOfCollision(rig: RigidBody): void {}\n\n  /**\n   * Override to implement SDF.\n   * @param p - Point position.\n   * @returns SDF value d.\n   */\n  distance(p: Vector): number {\n    return 0 * this.signMultiplier;\n  }\n\n  /**\n   * Get normal direction at p.\n   * @param p - Point position.\n   * @returns Normal direction n.\n   */\n  normal(p: Vector): Vector {\n    return this.normalFD2(p);\n  }\n\n  /**\n   * @param p - Evaluation point.\n   * @returns Spacial velocity ast p.\n   */\n  velocity(p: Vector): Vector {\n    return this.math.vec2(0, 0);\n  }\n\n  /**\n   * Simple one-sided difference calculation.\n   * @param p - Point position.\n   * @returns Normal direction n.\n   */\n  normalFD1(p: Vector): Vector {\n    const h = 0.001;\n    let q = this.math.vec2(p.x, p.y);\n    q.x += h;\n    let d = this.distance(p);\n    let dxh = this.distance(q);\n    q.x -= h;\n    q.y += h;\n    let dyh = this.distance(q);\n    let n = this.math.vec2((dxh - d) / h, (dyh - d) / h).normalize();\n    return n;\n  }\n\n  /**\n   * @param p - Point position.\n   * @returns Normal direction n.\n   */\n  normalFD2(p: Vector): Vector {\n    const h = 0.001;\n    let q1 = this.math.vec2(p.x, p.y);\n    let q2 = this.math.vec2(p.x, p.y);\n    q1.x += h;\n    q2.x -= h;\n    let dxh1 = this.distance(q1);\n    let dxh2 = this.distance(q2);\n    q1.x -= h;\n    q2.x += h;\n    q1.y += h;\n    q2.y -= h;\n    let dyh1 = this.distance(q1);\n    let dyh2 = this.distance(q2);\n    let n = this.math\n      .vec2((dxh1 - dxh2) / (2 * h), (dyh1 - dyh2) / (2 * h))\n      .normalize();\n    return n;\n  }\n\n  getCor(): number {\n    return this.cor;\n  }\n\n  getEnergy(): number {\n    return 0;\n  }\n}\n","import p5, { Vector } from \"p5\";\nimport { HEIGHT, WIDTH } from \"./consts\";\nimport { MathUtils } from \"./math-utils\";\nimport { Obstacle } from \"./obstacles/obstacle\";\nimport { RigidBody } from \"./rigidbody\";\n\ntype DistPair = [number, RigidBody | null];\n\n/**\n * distance from a point to the scene.\n * @returns [dist, Obstacle] pair to the object with minimum distance in the\n * scene.\n */\nexport function distanceScene(\n  pos: Vector,\n  rigidBodies: RigidBody[],\n  sdf: SDF,\n): DistPair {\n  let minDist: DistPair = [Infinity, null];\n  rigidBodies.forEach((rigidBody) => {\n    const doi = rigidBody.distance(pos);\n    minDist = sdf.opUnion(minDist, [doi, rigidBody]);\n  });\n  return minDist;\n}\n\n/**\n * Draws raster of scene SDF\n */\nexport function drawSDFRaster(p: p5, rigidBodies: RigidBody[]): void {\n  let math = new MathUtils(p);\n  let sdf = new SDF(p);\n  p.push();\n  // Warning: slow for small h due to draw call overhead\n  const h = 0.01;\n  p.noStroke();\n  {\n    // BLACK BACKGROUND\n    p.rectMode(p.CORNERS);\n    p.fill(0);\n    p.rect(0, 0, WIDTH, HEIGHT);\n  }\n  p.rectMode(p.CENTER); // --> square(x,y,h) of width h centered at (x,y)\n  for (let x = h / 2; x < WIDTH; x += h) {\n    for (let y = h / 2; y < HEIGHT; y += h) {\n      let [d, _] = distanceScene(math.vec2(x, y), rigidBodies, sdf);\n      if (d <= 0) {\n        // BLUE obstacles\n        p.fill(0, 0, ((p.abs(d) * 255) / WIDTH) * 10);\n      } else {\n        // ORANGE distances\n        let r = ((255 * d) / WIDTH) * 4.5;\n        let g = ((165 * d) / WIDTH) * 4.5;\n        p.fill(r, g, 0);\n      }\n      p.square(x, y, h);\n    }\n  }\n  // DRAW GRID LINES:\n  p.strokeWeight(0.001);\n  p.stroke(255);\n  for (let z = 0; z <= 1; z += 0.1) {\n    p.line(z, 0, z, 1);\n    p.line(0, z, 1, z);\n  }\n\n  p.pop();\n}\n\n/**\n * SDF helper class.\n * See https://iquilezles.org/articles/distfunctions2d for more SDF.\n */\nexport class SDF {\n  p: p5;\n  math: MathUtils;\n\n  constructor(p: p5) {\n    this.p = p;\n    this.math = new MathUtils(p);\n  }\n\n  /**\n   * @param distO1 - Distance 1\n   * @param distO2 - Distance 2\n   * @returns Union of two distance.\n   */\n  opUnion(distO1: DistPair, distO2: DistPair): DistPair {\n    return distO1[0] < distO2[0] ? distO1 : distO2;\n  }\n\n  /**\n   * @param distO1 - Distance 1\n   * @param distO2 - Distance 2\n   * @returns Intersect of two distance.\n   */\n  opIntersection(distO1: DistPair, distO2: DistPair): DistPair {\n    return distO1[0] > distO2[0] ? distO1 : distO2;\n  }\n\n  // TODO: opSubtraction (d1, d2) { return max(-d1,d2); }\n\n  /**\n   * @param p - Eval point.\n   * @param r - Radius of the circle.\n   * @returns SDF of the circle.\n   */\n  sdCircle(p: Vector, r: number): number {\n    return this.math.length(p) - r;\n  }\n\n  /**\n   * @param p - Eval point.\n   * @param b - Half widths in X and Y.\n   * @returns Box SDF.\n   */\n  sdBox(p: Vector, b: Vector): number {\n    let d = this.math.vsub(this.math.vabs(p), b);\n    return (\n      this.math.length(this.math.vmax(d, 0.0)) +\n      this.p.min(this.p.max(d.x, d.y), 0.0)\n    );\n  }\n\n  /**\n   * @param q - Eval point.\n   * @param r1 - Radius 1.\n   * @param r2 - Radius 2.\n   * @param h - Length of the capsule.\n   * @returns Uneven capsule SDF.\n   */\n  sdUnevenCapsule(q: Vector, r1: number, r2: number, h: number): number {\n    // local copy to avoid changing pass-by-ref input\n    // p.x = abs(p.x);\n    let p = this.math.vec2(this.p.abs(q.x), q.y);\n    const b = (r1 - r2) / h;\n    const a = Math.sqrt(1.0 - b * b);\n    const k = this.math.dot(p, this.math.vec2(-b, a));\n    if (k < 0.0) return this.math.length(p) - r1;\n    if (k > a * h)\n      return this.math.length(this.math.vsub(p, this.math.vec2(0.0, h))) - r2;\n    return this.math.dot(p, this.math.vec2(a, b)) - r1;\n  }\n}\n","module.exports = p5;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(927);\n"],"names":["p","pos","vel","r","cor","endzone","endzonCallback","physicObjects","strokeWidth","fillColor","highlightColor","strokeColor","highlight","this","math","MathUtils","sdf","SDF","radius","color","obstacleSfx","obstacleSfxReady","forEach","sfxPath","i","push","loadSound","ballSfx","ballSfxReady","getCor","distance","v","vsub","sdCircle","normal","normalFD2","h","q1","vec2","x","y","q2","dxh1","dxh2","dyh1","dyh2","normalize","velocity","notifyOfCollision","rig","Obstacle","idx","floor","random","length","play","Ball","draw","fill","circle","pop","rayMarch","origin","march","marchDist","marchDir","vmult","currPoint","copy","hitDist","distanceScene","filter","_1","_2","sceneDist","vadd","update","dt","g","HEIGHT","checkT","hitRig","relVel","velDir","add","abs","penetrateDist","n","vn","dot","hitEnergy","getEnergy","mult","hitT","vacc","WIDTH","FRAME_RATE","background","gameObjects","physicsObjects","pause","showHint","gameOver","coin","score","levelSetup","domainBox","BoxObstacle","invert","boxObstacle1","PI","boxObstacle2","circleBumper1","CircleBumper","circleBumper2","coinCircle1","CircleTarget","flipper1","Flipper","keyIsDown","boxObstacle3","flipper2","boxObstacle4","hitEndzon","ball","splice","every","item","preload","loadImage","setup","createCanvas","windowHeight","frameRate","ellipseMode","RADIUS","strokeWeight","displayBoxWidth","displayBoxHeight","boxX","boxY","gamneObject","clear","noStroke","scale","height","image","keyIsPressed","key","drawSDFRaster","drawable","rect","textSize","textAlign","CENTER","text","Math","displayHint","keyPressed","emittBall","mag","dot2","a","b","createVector","vec3","c","sign","clamp","low","high","constrain","w","Vector","sub","vabs","vmax","max","vmin","min","vvertex","vertex","vrotate","theta","cos","s","sin","rot","bx","by","translate","rotate","rectMode","vRot","signMultiplier","sdBox","center","energy","hitCallback","highlightLerpSpeed","currColorT","lerpColor","CircleObstacle","pivot","r1","r2","startAngle","endAngle","flipperSpeed","triggerEvent","currAngle","currX","currOmega","flipperProfile","t","sq","totalT","moving","anglePerc","omegaPerc","drawFlipper","R1","R2","c2y","sinBeta","cosBeta","sqrt","dx1","dy1","dx2","dy2","V1","V2","V3","V4","beginShape","endShape","CLOSE","rotAngle","sdUnevenCapsule","R","Error","normalFD1","q","d","dxh","dyh","rigidBodies","CORNERS","square","stroke","z","line","minDist","Infinity","rigidBody","doi","opUnion","distO1","distO2","opIntersection","k","module","exports","p5","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","globalThis","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace"],"sourceRoot":""}